<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>小明的技术博客</title><link>/</link><description>Recent content on 小明的技术博客</description><generator>Hugo -- gohugo.io</generator><language>zh</language><copyright>&amp;copy; 2021 &lt;a href="https://h.hao.vin/">小明的技术博客&lt;/a> and &lt;a href="https://github.com/gaecom">gaecom&lt;/a></copyright><lastBuildDate>Mon, 17 Jan 2022 00:00:00 +0000</lastBuildDate><atom:link href="/index.xml" rel="self" type="application/rss+xml"/><item><title>opencv手势识别</title><link>/ai/cv/opencv%E6%89%8B%E5%8A%BF%E8%AF%86%E5%88%AB/</link><pubDate>Mon, 17 Jan 2022 00:00:00 +0000</pubDate><guid>/ai/cv/opencv%E6%89%8B%E5%8A%BF%E8%AF%86%E5%88%AB/</guid><description/></item><item><title>拷贝jira的bitbucket里项目下所有git到另一个项目里</title><link>/develop/git/copy-project-git-repo-to-other-project/</link><pubDate>Wed, 12 Jan 2022 00:00:00 +0000</pubDate><guid>/develop/git/copy-project-git-repo-to-other-project/</guid><description>&lt;p>使用Atlassian的协作开发工具,在大公司开发项目中，有时候会在兄弟部门的项目上进行二次开发，但又不能对原来的项目的代码仓库有影响，往往需要独立fork一份项目出来，然后有时候公司不允许fork，于是涉及从一个项目里的所有git仓库迁移到新项目&lt;/p></description></item><item><title>CIM各种模型数据说明</title><link>/3dgis/cim%E5%90%84%E7%A7%8D%E6%A8%A1%E5%9E%8B%E6%95%B0%E6%8D%AE%E8%AF%B4%E6%98%8E/</link><pubDate>Tue, 11 Jan 2022 00:00:00 +0000</pubDate><guid>/3dgis/cim%E5%90%84%E7%A7%8D%E6%A8%A1%E5%9E%8B%E6%95%B0%E6%8D%AE%E8%AF%B4%E6%98%8E/</guid><description>&lt;p>CIM各种模型数据说明&lt;/p></description></item><item><title>视频转码服务</title><link>/develop/transcode/transcode/</link><pubDate>Tue, 04 Jan 2022 00:00:00 +0000</pubDate><guid>/develop/transcode/transcode/</guid><description>&lt;p>视频转码背景、架构设计、实现&lt;/p></description></item><item><title>docker使用最佳实践</title><link>/develop/docker/docker-best-practise/</link><pubDate>Sat, 01 Jan 2022 00:00:00 +0000</pubDate><guid>/develop/docker/docker-best-practise/</guid><description>&lt;p>最新docker命令行、管理、技巧、最佳实践合集&lt;/p></description></item><item><title>gradle编译，因仓库地址被墙或不存在,导致编译慢或无法编译问题</title><link>/develop/android/gradle-compile-avoid-firewall/</link><pubDate>Mon, 27 Dec 2021 00:00:00 +0000</pubDate><guid>/develop/android/gradle-compile-avoid-firewall/</guid><description>在编译java应用，比如android应用，有些组件仓库，使用的是国外仓库，甚至仓库中心本身已经关闭或者迁移，所以需要使用国内镜像，加快下载速度。
解决方法两种: 配置代理 翻墙下载组件，放到仓库下，地址 用户目录/.gradle/caches/modules-2/files-2.1 配置仓库镜像，一些特殊的组件没有在镜像中，只能使用后面方法 配置镜像,配置的地方可以两处:可以直接在工程中配置，也可以全局配置 (对电脑上所有的工程起作用)，以上配置一个即可。
详细配置方法: 一. 在代码工程中配置 gradle.properties中有proxy的配置,这个只能在公司中使用 (也许有效，我暂时注释了),现在启用了阿里云镜像，在BIM的rn项目的develop分支已经做了调整 。 ##下面是公司的代理服务器地址,如果还有问题，必须翻墙，且在公司里编译，gradle.properties中去掉下面的注释 #systemProp.https.proxyHost=192.168.0.119 #systemProp.https.proxyPort=3128 2. 出现java.lang.NoClassDefFoundError android.support.v4.content.ContextCompat 报错 在react-native-*的一些包中，导入了android.support.v4.content.ContextCompat
找到报错的文件，将文件中 import android.support.v4.content.ContextCompat;
改成
import androidx.core.content.ContextCompat;
注意修改gradle.properties文件,在BIM的rn项目的develop分支已经做了调整 android.useAndroidX=true android.enableJetifier=true 修改build.gradle，在上面增加。在BIM的rn项目的develop分支已经做了调整 allprojects { repositories { def ALIYUN_REPO_URL = 'https://maven.aliyun.com/repository/public/' def ALIYUN_JCENTER_URL = 'https://maven.aliyun.com/repository/jcenter/' def ALIYUN_GOOGLE_URL = 'https://maven.aliyun.com/repository/google/' def ALIYUN_GRADLE_PLUGIN_URL = 'https://maven.aliyun.com/repository/gradle-plugin/' all { ArtifactRepository repo -&amp;gt; if(repo instanceof MavenArtifactRepository){ def url = repo.</description></item><item><title>ipv4系统支持ipv6改造</title><link>/develop/op/ipv4-to-ipv6/</link><pubDate>Mon, 27 Dec 2021 00:00:00 +0000</pubDate><guid>/develop/op/ipv4-to-ipv6/</guid><description>&lt;p>机房传统的ipv4线路,支持ipv6改造,由支持ipv6和ipv4双协议，逐步过度到ipv6协议&lt;/p></description></item><item><title>logback最新高危漏洞 原理、漏洞应对与缓解方案</title><link>/security/logback-vulnerability-reason-solution/</link><pubDate>Sun, 26 Dec 2021 00:00:00 +0000</pubDate><guid>/security/logback-vulnerability-reason-solution/</guid><description>&lt;h2 id="log4j漏洞介绍">log4j漏洞介绍&lt;/h2>
&lt;p>前段时间长亭科技发现log4j2的高危漏洞,来自logback的新闻以及CVE数据，发现logback特别是logback-classic中也有可以利用JNDI进行Arbitrary Code Execution 执行漏洞&lt;/p></description></item><item><title>Log4j2 原理、漏洞应对与缓解方案</title><link>/security/log4j2-vulnerability-solution/</link><pubDate>Sat, 25 Dec 2021 19:56:07 +0800</pubDate><guid>/security/log4j2-vulnerability-solution/</guid><description>&lt;h2 id="log4j漏洞介绍">log4j漏洞介绍&lt;/h2>
&lt;p>阿里巴巴长亭科技发现Apache Log4j2反序列化远程代码执行漏洞（CVE-2021-44228），随后更多细节被公开，攻击者可利用该漏洞构造恶意请求，触发远程代码执行，
由于log4j2的异步快速等优异特性，打日志对生产服务影响很小，国内外很多java服务器组件使用了,造成广泛影响。&lt;/p></description></item><item><title>npm最佳实践</title><link>/develop/npm-webpack-vite-yarn/npm-package/</link><pubDate>Sat, 25 Dec 2021 19:56:07 +0800</pubDate><guid>/develop/npm-webpack-vite-yarn/npm-package/</guid><description>&lt;p>介绍npm参数介绍、打包、发布、测试、脚本、镜像配置等最佳实践&lt;/p></description></item><item><title>xcode使用最佳实践</title><link>/develop/ios/xcode/xcode-best-practise/</link><pubDate>Sat, 25 Dec 2021 19:56:07 +0800</pubDate><guid>/develop/ios/xcode/xcode-best-practise/</guid><description>&lt;p>介绍ios开发中关于xcode工具使用、开发、打包、测试、条件编译、发布到应用市场等使用最佳实践&lt;/p></description></item><item><title>常用的各大厂商监控摄像头的rtsp的流地址以及获取方法</title><link>/media/camera-default-rtsp-stream-urls/</link><pubDate>Sat, 25 Dec 2021 19:56:07 +0800</pubDate><guid>/media/camera-default-rtsp-stream-urls/</guid><description>&lt;p>监控摄像头的视频转码推流，经常要获取rtsp的流地址，下面是收集的常用的各大厂商监控摄像头的rtsp的流地址以及获取方法&lt;/p></description></item><item><title>最新xcode编译、打包成ipa、测试、发布到appstore/苹果商店/testflight/pyger/fir等完整流程</title><link>/develop/ios/xcode/xcode-archive-ipa/</link><pubDate>Sat, 25 Dec 2021 19:56:07 +0800</pubDate><guid>/develop/ios/xcode/xcode-archive-ipa/</guid><description>&lt;p>2022年最新版 xcode编译、打包成ipa、测试、发布到appstore/苹果商店/testflight/pyger/fir等完整流程&lt;/p></description></item><item><title>支持emoji表情</title><link>/develop/markdown/emoji-support/</link><pubDate>Mon, 05 Apr 2021 00:00:00 +0000</pubDate><guid>/develop/markdown/emoji-support/</guid><description>&lt;p>可以支持各种方式的emoji表情的嵌入&lt;/p></description></item><item><title>hugo以及hugo的eureka主题使用介绍</title><link>/develop/markdown/hugo-eureka-theme-guide/</link><pubDate>Wed, 31 Mar 2021 13:11:22 +0800</pubDate><guid>/develop/markdown/hugo-eureka-theme-guide/</guid><description>&lt;p>hugo以及hugo的eureka主题使用介绍，介绍hugo的基本配置、函数、模版等最佳实践&lt;/p></description></item><item><title>获取任意一个小程序的页面路径</title><link>/develop/wxmp/%E8%8E%B7%E5%8F%96%E5%B0%8F%E7%A8%8B%E5%BA%8F%E7%9A%84%E9%A1%B5%E9%9D%A2%E8%B7%AF%E5%BE%84/</link><pubDate>Wed, 27 Jan 2021 00:00:00 +0000</pubDate><guid>/develop/wxmp/%E8%8E%B7%E5%8F%96%E5%B0%8F%E7%A8%8B%E5%BA%8F%E7%9A%84%E9%A1%B5%E9%9D%A2%E8%B7%AF%E5%BE%84/</guid><description>&lt;p>用一个小程序，获取任意一个小程序的页面路径.&lt;/p></description></item><item><title>h265编码的视频进行h264转码资源占用对比</title><link>/develop/transcode/h265%E5%88%B0h264%E7%9A%84%E8%BD%AC%E7%A0%81%E8%B5%84%E6%BA%90%E8%AF%84%E4%BC%B0/</link><pubDate>Sun, 24 Jan 2021 00:00:00 +0000</pubDate><guid>/develop/transcode/h265%E5%88%B0h264%E7%9A%84%E8%BD%AC%E7%A0%81%E8%B5%84%E6%BA%90%E8%AF%84%E4%BC%B0/</guid><description>&lt;p>在同样的图像质量下,h265相比于h264,视频大小减少了大约50%。由于浏览器对h265编解码的支持度不好，需要编码成h264，但是对h265进行编解码耗费CPU算力。因此项目上需要综合考虑是使用h265
编码，然后转码到h264，节省硬盘划算，还是继续使用h264编码解码节省算力成本划算。&lt;/p></description></item><item><title>数学支持</title><link>/develop/markdown/math-support/</link><pubDate>Fri, 20 Nov 2020 22:52:56 +0800</pubDate><guid>/develop/markdown/math-support/</guid><description>&lt;p>使用 KaTeX 支持数学公式&lt;/p></description></item><item><title>hugo的markdown的语法介绍</title><link>/develop/markdown/markdown-syntax/</link><pubDate>Wed, 11 Mar 2020 00:00:00 +0000</pubDate><guid>/develop/markdown/markdown-syntax/</guid><description/></item></channel></rss>