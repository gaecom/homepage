<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>gradle on 小明的技术博客</title><link>/tags/gradle/</link><description>Recent content in gradle on 小明的技术博客</description><generator>Hugo -- gohugo.io</generator><language>zh</language><copyright>&amp;copy; 2021 &lt;a href="https://h.hao.vin/">小明的技术博客&lt;/a> and &lt;a href="https://github.com/gaecom">gaecom&lt;/a></copyright><lastBuildDate>Mon, 27 Dec 2021 00:00:00 +0000</lastBuildDate><atom:link href="/tags/gradle/index.xml" rel="self" type="application/rss+xml"/><item><title>gradle编译，因仓库地址被墙或不存在,导致编译慢或无法编译问题</title><link>/develop/android/gradle-compile-avoid-firewall/</link><pubDate>Mon, 27 Dec 2021 00:00:00 +0000</pubDate><guid>/develop/android/gradle-compile-avoid-firewall/</guid><description>在编译java应用，比如android应用，有些组件仓库，使用的是国外仓库，甚至仓库中心本身已经关闭或者迁移，所以需要使用国内镜像，加快下载速度。
解决方法两种: 配置代理 翻墙下载组件，放到仓库下，地址 用户目录/.gradle/caches/modules-2/files-2.1 配置仓库镜像，一些特殊的组件没有在镜像中，只能使用后面方法 配置镜像,配置的地方可以两处:可以直接在工程中配置，也可以全局配置 (对电脑上所有的工程起作用)，以上配置一个即可。
详细配置方法: 一. 在代码工程中配置 gradle.properties中有proxy的配置,这个只能在公司中使用 (也许有效，我暂时注释了),现在启用了阿里云镜像，在BIM的rn项目的develop分支已经做了调整 。 ##下面是公司的代理服务器地址,如果还有问题，必须翻墙，且在公司里编译，gradle.properties中去掉下面的注释 #systemProp.https.proxyHost=192.168.0.119 #systemProp.https.proxyPort=3128 2. 出现java.lang.NoClassDefFoundError android.support.v4.content.ContextCompat 报错 在react-native-*的一些包中，导入了android.support.v4.content.ContextCompat
找到报错的文件，将文件中 import android.support.v4.content.ContextCompat;
改成
import androidx.core.content.ContextCompat;
注意修改gradle.properties文件,在BIM的rn项目的develop分支已经做了调整 android.useAndroidX=true android.enableJetifier=true 修改build.gradle，在上面增加。在BIM的rn项目的develop分支已经做了调整 allprojects { repositories { def ALIYUN_REPO_URL = 'https://maven.aliyun.com/repository/public/' def ALIYUN_JCENTER_URL = 'https://maven.aliyun.com/repository/jcenter/' def ALIYUN_GOOGLE_URL = 'https://maven.aliyun.com/repository/google/' def ALIYUN_GRADLE_PLUGIN_URL = 'https://maven.aliyun.com/repository/gradle-plugin/' all { ArtifactRepository repo -&amp;gt; if(repo instanceof MavenArtifactRepository){ def url = repo.</description></item></channel></rss>